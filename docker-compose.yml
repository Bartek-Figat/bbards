version: "3.7"

x-backend:
  &backend
  container_name: backend
  build:
    context: .
    dockerfile: ./.docker/Dockerfile
  restart: always
  command: npm run dev
  volumes:
    - ./src:/app/src
    - ./src/data:/app/data
  environment:
    - dbURI=mongodb://root:example@mongo:27017
  env_file:
    - .env
  networks:
    - app-network
    - nginx-network
  depends_on:
    - mongo
  links:
    - mongo

services:
  app:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
    environment:
      DB_MYSQL_HOST: "db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
      - - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - db
    networks:
      - nginx-network

  db:
    image: 'jc21/mariadb-aria:latest'
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 'npm'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: 'npm'
    volumes:
      - ./data/mysql:/var/lib/mysql

  backend1:
    <<: *backend
    container_name: backend1
  backend2:
    <<: *backend
    container_name: backend2
  backend3:
    <<: *backend
    container_name: backend3

  frontend:
    container_name: frontend
    build:
      context: ./client
      dockerfile: ./.docker/Dockerfile
    restart: on-failure
    networks:
      - app-network
      - nginx-network
    ports:
      - 3000:80 # Public HTTP Port  
    volumes:
      - ./client/src:/app/src
    depends_on:
      - backend1
      - backend2
      - backend3

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    networks:
      - app-network
    depends_on:
      - mongo
    links:
      - mongo
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

networks:
  app-network:
    driver: bridge
  nginx-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
