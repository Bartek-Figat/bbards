version: "3.7"

services:

  nginx:
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./.docker/nginx/proxy_headers.conf:/etc/nginx/proxy_headers.conf
      - ./.docker/nginx/sites/:/etc/nginx/conf.d
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    links:
      - backend
      - frontend
    restart: always

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./.docker/Dockerfile
    restart: always
    environment:
      - dbURI=mongodb://root:example@mongo:27017
    # env_file:
    #   - .env
    networks:
      - app-network
      - db
    depends_on:
      - mongo
    links:
      - mongo
  frontend:
    container_name: frontend
    build:
      context: ./client
      dockerfile: ./.docker/Dockerfile
    restart: on-failure
    networks:
      - app-network
    depends_on:
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    networks:
      - db
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

networks:
  app-network:
    driver: bridge
  db:
    driver: bridge

volumes:
  mongo-data:
    driver: local
  static-files:
